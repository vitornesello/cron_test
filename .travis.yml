## Documentation: http://docs.travis-ci.com/user/languages/julia/
language: julia
os:
  - osx
julia:
  - 1.0
notifications:
  email: false
git:
  depth: 99999999

# script:
#   - julia -e '@show $TRAVIS_EVENT_TYPE; Pkg.clone(pwd()); Pkg.build("cron_test"); Pkg.test("cron_test"; coverage=false)'

matrix:
  include:
  - name: "running examples"
  - script: 
    - julia -e '@show "EXAMPLES JOB"; @show ARGS; using Pkg; Pkg.build("cron_test"); Pkg.test("cron_test"; coverage=false)' $TRAVIS_EVENT_TYPE

#       - julia -e 'Pkg.clone(pwd())'
#       - mv cron_test/Project.toml cron_test/Project_bckp.toml
#       - mv Project_2.toml Project.toml
#       - julia -e 'Pkg.build("cron_test"); include("cron_test/test/runtests2.jl")'

# matrix:
#   exclude:
#   - name: "running examples"
#     env: TRAVIS_EVENT_TYPE=cron
#     push, pull_request, api, cron

# jobs:
#   include:
#     - stage: "Documentation"
#       julia: 1.0
#       os: linux
#       script:
#         - julia --project=docs -e 'using Pkg; Pkg.instantiate(); Pkg.add(PackageSpec(path=pwd()))'
#         - julia --project=docs --color=yes docs/make.jl
#       after_success: skip

## uncomment the following lines to allow failures on nightly julia
## (tests will run but not make your overall status red)
#matrix:
#  allow_failures:
#  - julia: nightly

## uncomment and modify the following lines to manually install system packages
#addons:
#  apt: # apt-get for linux
#    packages:
#    - gfortran
#before_script: # homebrew for mac
#  - if [ $TRAVIS_OS_NAME = osx ]; then brew install gcc; fi

## uncomment the following lines to override the default test script
# script:
#   - julia -e 'Pkg.clone(pwd()); Pkg.build("cron_test"); Pkg.test("cron_test"; coverage=false)'
# after_success:
#   - julia -e 'Pkg.add("Documenter")'
#   - julia -e 'cd(Pkg.dir("cron_test")); include(joinpath("docs", "make.jl"))'
  # push coverage results to Coveralls
  # - julia -e 'cd(Pkg.dir("cron_test")); Pkg.add("Coverage"); using Coverage; Coveralls.submit(Coveralls.process_folder())'
  # push coverage results to Codecov
  # - julia -e 'cd(Pkg.dir("cron_test")); Pkg.add("Coverage"); using Coverage; Codecov.submit(Codecov.process_folder())'
